@model Game
@{
    ViewData["Title"] = "Tres en Raya";
}

<h1 class="text-center">Tres en raya</h1>
<h3 class"="text-center">@GetStatusText()</h3>
<div class="d-flex justify-content-center">
    <table class="text-center">
        <thead>
            <tr>
                <th style="width: 30px;"></th>
                @foreach (var header in GetHeadersOfGame())
                {
                    <th style="width: 100px;">@header</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var row in GetHeadersOfGame())
            {
                <tr>

                    <td style="width:30px;">@row</td>
                    @foreach (var col in GetHeadersOfGame())
                    {
                        <td style="width: 100px; height: 100px;">
                            <form method="post">
                                <input name="x" value="@col" hidden/>
                                <input name="y" value="@row" hidden/>
                                <button type="submit" disabled="@IsDisabled(col, row)" class="@GetClassOfThisCell(col, row)" style="width: 100px; height: 100px;">@GetBoard()[col, row].GetValue()</button>
                            </form>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

@functions {
    int [] GetHeadersOfGame()
    {
        List<int> headers = new List<int>();
        for (int i=0; i<Model.GetBoard().Size; i++)
        {
            headers.Add(i);
        }
        return headers.ToArray();
    }
    Board GetBoard()
    {
        return Model.GetBoard();
    }
    char GetCurrentPlayerName()
    {
        return Model.GetCurrentPlayer().Indicator;
    }
    string GetStatusText()
    {
        if (!Model.AnyWins()) {
            return $"Turno de: {GetCurrentPlayerName()}";
        }
        return $"Gano {Model.GetWinner().Indicator}";
    }
    string GetClassOfThisCell(int col, int row)
    {
        if (GetBoard()[col, row].IsNotEmpty())
        {
            return "btn btn-light disabled";
        }
        return "btn btn-info";
    }
    bool IsDisabled(int col, int row)
    {
        return GetBoard()[col, row].IsNotEmpty();
    }
}